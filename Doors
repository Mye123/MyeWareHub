do local FlatIdent_3C647=0;local StrToNumber;local Byte;local Char;local Sub;local Subg;local Rep;local Concat;local Insert;local GetFEnv;local Setmetatable;local PCall;local Select;local Unpack;local ToNumber;local VMCall;while true do if (FlatIdent_3C647==3) then Unpack=unpack or table.unpack;ToNumber=tonumber;VMCall=nil;function VMCall(ByteString,vmenv)local FlatIdent_74A85=0;local DIP;local repeatNext;local gBit;local gBits8;local gBits16;local gBits32;local gFloat;local gString;local gInt;local _R;local Deserialize;local Wrap;while true do if (FlatIdent_74A85==4) then _R=nil;function _R(...)return {...},Select("#",...);end Deserialize=nil;function Deserialize()local FlatIdent_52302=0;local Instrs;local Functions;local Lines;local Chunk;local ConstCount;local Consts;while true do if (FlatIdent_52302==0) then Instrs={};Functions={};Lines={};FlatIdent_52302=1;end if (FlatIdent_52302==1) then Chunk={Instrs,Functions,nil,Lines};ConstCount=gBits32();Consts={};FlatIdent_52302=2;end if (FlatIdent_52302==3) then for Idx=1,gBits32() do Functions[Idx-1]=Deserialize();end for Idx=1,gBits32() do Lines[Idx]=gBits32();end return Chunk;end if (FlatIdent_52302==2) then for Idx=1,ConstCount do local Type=gBits8();local Cons;if (Type==1) then Cons=gBits8()~=0;elseif (Type==2) then Cons=gFloat();elseif (Type==3) then Cons=gString();end Consts[Idx]=Cons;end Chunk[3]=gBits8();for Idx=1,gBits32() do local Descriptor=gBits8();if (gBit(Descriptor,1,1)==0) then local FlatIdent_6C173=0;local Type;local Mask;local Inst;while true do if (1==FlatIdent_6C173) then Inst={gBits16(),gBits16(),nil,nil};if (Type==0) then local FlatIdent_998A2=0;while true do if (0==FlatIdent_998A2) then Inst[3]=gBits16();Inst[4]=gBits16();break;end end elseif (Type==1) then Inst[3]=gBits32();elseif (Type==2) then Inst[3]=gBits32() -(2^16);elseif (Type==3) then local FlatIdent_7DFC0=0;while true do if (FlatIdent_7DFC0==0) then Inst[3]=gBits32() -(2^16);Inst[4]=gBits16();break;end end end FlatIdent_6C173=2;end if (FlatIdent_6C173==0) then Type=gBit(Descriptor,2,3);Mask=gBit(Descriptor,4,6);FlatIdent_6C173=1;end if (2==FlatIdent_6C173) then if (gBit(Mask,1,1)==1) then Inst[2]=Consts[Inst[2]];end if (gBit(Mask,2,2)==1) then Inst[3]=Consts[Inst[3]];end FlatIdent_6C173=3;end if (FlatIdent_6C173==3) then if (gBit(Mask,3,3)==1) then Inst[4]=Consts[Inst[4]];end Instrs[Idx]=Inst;break;end end end end FlatIdent_52302=3;end end end FlatIdent_74A85=5;end if (FlatIdent_74A85==3) then function gFloat()local FlatIdent_48CF1=0;local l;local r;while true do if (FlatIdent_48CF1==1) then return (( -2 * gBit(r,32)) + 1) * (2^(gBit(r,21,31) -1023)) * ((((gBit(r,1,20) * (2^32)) + l)/(2^52)) + 1);end if (FlatIdent_48CF1==0) then l=gBits32();r=gBits32();FlatIdent_48CF1=1;end end end gString=nil;function gString(Len)local Str;if  not Len then Len=gBits32();if (Len==0) then return "";end end Str=Sub(ByteString,DIP,(DIP + Len) -1);DIP=DIP + Len;local FStr={};for Idx=1, #Str do FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end return Concat(FStr);end gInt=gBits32;FlatIdent_74A85=4;end if (FlatIdent_74A85==2) then function gBits16()local a,b=Byte(ByteString,DIP,DIP + 2);DIP=DIP + 2;return (b * 256) + a;end gBits32=nil;function gBits32()local a,b,c,d=Byte(ByteString,DIP,DIP + 3);DIP=DIP + 4;return (d * 16777216) + (c * 65536) + (b * 256) + a;end gFloat=nil;FlatIdent_74A85=3;end if (FlatIdent_74A85==5) then Wrap=nil;function Wrap(Chunk,Upvalues,Env)local Instr=Chunk[1];local Proto=Chunk[2];local Params=Chunk[3];return function(...)local FlatIdent_51341=0;local VIP;local Top;local Args;local PCount;local Loop;while true do if (FlatIdent_51341==0) then VIP=1;Top= -1;FlatIdent_51341=1;end if (FlatIdent_51341==1) then Args={...};PCount=Select("#",...) -1;FlatIdent_51341=2;end if (FlatIdent_51341==3) then A,B=_R(PCall(Loop));if  not A[1] then local line=Chunk[4][VIP] or "?";error("Script error at ["   .. line   .. "]:"   .. A[2]);else return Unpack(A,2,B);end break;end if (2==FlatIdent_51341) then Loop=nil;function Loop()local Instr=Instr;local Const=Const;local Proto=Proto;local Params=Params;local _R=_R;local Vararg={};local Lupvals={};local Stk={};for Idx=0,PCount do if ((3675>3375) and (Idx>=Params)) then Vararg[Idx-Params]=Args[Idx + 1];else Stk[Idx]=Args[Idx + 1];end end local Varargsz=(PCount-Params) + 1;local Inst;local Enum;while true do local FlatIdent_1A542=0;local FlatIdent_2FA00;while true do if ((824<3157) and (0==FlatIdent_1A542)) then FlatIdent_2FA00=0;while true do if ((1770==1770) and (FlatIdent_2FA00==1)) then if ((Enum<=24) or (3854<=2079)) then if ((3609>2134) and (Enum<=11)) then if ((4140>2052) and (Enum<=5)) then if ((Enum<=2) or (621>=1092)) then if ((1169<=4256) and (Enum<=0)) then local FlatIdent_6847C=0;local FlatIdent_8EF58;local A;local B;while true do if ((1394>1174) and (FlatIdent_6847C==1)) then B=nil;while true do if ((948<=4103) and (FlatIdent_8EF58==0)) then local FlatIdent_65142=0;while true do if ((1920>=932) and (FlatIdent_65142==0)) then A=Inst[2];B=Stk[Inst[3]];FlatIdent_65142=1;end if ((3386<=4284) and (FlatIdent_65142==1)) then FlatIdent_8EF58=1;break;end end end if ((FlatIdent_8EF58==1) or (1174<676)) then Stk[A + 1]=B;Stk[A]=B[Inst[4]];break;end end break;end if ((0==FlatIdent_6847C) or (987==524)) then FlatIdent_8EF58=0;A=nil;FlatIdent_6847C=1;end end elseif ((1995==1995) and (Enum>1)) then local FlatIdent_7FB2=0;local A;local Cls;while true do if ((FlatIdent_7FB2==1) or (3144<=1376)) then for Idx=1, #Lupvals do local FlatIdent_6D567=0;local FlatIdent_F597;local List;while true do if ((548<2845) and (FlatIdent_6D567==1)) then while true do if ((FlatIdent_F597==0) or (4732<3798)) then List=Lupvals[Idx];for Idz=0, #List do local FlatIdent_91273=0;local FlatIdent_4FC2F;local Upv;local NStk;local DIP;while true do if ((1200<=2972) and (FlatIdent_91273==1)) then NStk=nil;DIP=nil;FlatIdent_91273=2;end if ((2925>=1651) and (FlatIdent_91273==0)) then FlatIdent_4FC2F=0;Upv=nil;FlatIdent_91273=1;end if ((423>=135) and (FlatIdent_91273==2)) then while true do if ((FlatIdent_4FC2F==0) or (3237==2640)) then local FlatIdent_8273E=0;while true do if ((0==FlatIdent_8273E) or (1330<64)) then Upv=List[Idz];NStk=Upv[1];FlatIdent_8273E=1;end if ((FlatIdent_8273E==1) or (2702<1108)) then FlatIdent_4FC2F=1;break;end end end if ((1987==1987) and (FlatIdent_4FC2F==1)) then DIP=Upv[2];if ((3282==3282) and (NStk==Stk) and (DIP>=A)) then local FlatIdent_24E8=0;local FlatIdent_75DA8;while true do if ((2497<3286) and (0==FlatIdent_24E8)) then FlatIdent_75DA8=0;while true do if ((FlatIdent_75DA8==0) or (715==1076)) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;break;end end break;end end end break;end end break;end end end break;end end break;end if ((FlatIdent_6D567==0) or (87>2251)) then FlatIdent_F597=0;List=nil;FlatIdent_6D567=1;end end end break;end if ((3136<=3275) and (FlatIdent_7FB2==0)) then local FlatIdent_86F96=0;while true do if ((635<=4212) and (FlatIdent_86F96==0)) then A=Inst[2];Cls={};FlatIdent_86F96=1;end if ((519<572) and (FlatIdent_86F96==1)) then FlatIdent_7FB2=1;break;end end end end elseif ((Stk[Inst[2]]==Inst[4]) or (2008<1119)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((2502==2502) and (Enum<=3)) then local FlatIdent_62867=0;local FlatIdent_207A2;local B;local K;while true do if ((3406>1) and (FlatIdent_62867==0)) then FlatIdent_207A2=0;B=nil;FlatIdent_62867=1;end if ((30<2268) and (FlatIdent_62867==1)) then K=nil;while true do if ((FlatIdent_207A2==0) or (1295==1551)) then local FlatIdent_4C7B1=0;while true do if ((FlatIdent_4C7B1==0) or (2537<=1761)) then B=Inst[3];K=Stk[B];FlatIdent_4C7B1=1;end if ((FlatIdent_4C7B1==1) or (4399<=2782)) then FlatIdent_207A2=1;break;end end end if ((FlatIdent_207A2==1) or (1320==3529)) then for Idx=B + 1,Inst[4] do K=K   .. Stk[Idx];end Stk[Inst[2]]=K;break;end end break;end end elseif ((1764<3087) and (Enum==4)) then Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];else Stk[Inst[2]]=Stk[Inst[3]] * Stk[Inst[4]];end elseif ((Enum<=8) or (4794<1363)) then if ((Enum<=6) or (3159==2150)) then local FlatIdent_141FF=0;local FlatIdent_8E939;local A;local Results;local Limit;local Edx;while true do if ((2961<4735) and (FlatIdent_141FF==0)) then local FlatIdent_125A2=0;while true do if ((4833>=4485) and (1==FlatIdent_125A2)) then FlatIdent_141FF=1;break;end if ((1643<2711) and (FlatIdent_125A2==0)) then FlatIdent_8E939=0;A=nil;FlatIdent_125A2=1;end end end if ((2876==2876) and (FlatIdent_141FF==2)) then Edx=nil;while true do if ((2662>1177) and (0==FlatIdent_8E939)) then local FlatIdent_3DC14=0;local FlatIdent_6C008;while true do if ((3961==3961) and (FlatIdent_3DC14==0)) then FlatIdent_6C008=0;while true do if ((0==FlatIdent_6C008) or (1792<1671)) then local FlatIdent_2752B=0;while true do if ((4927>=4306) and (FlatIdent_2752B==0)) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1,Inst[3])));FlatIdent_2752B=1;end if ((2728<3162) and (FlatIdent_2752B==1)) then FlatIdent_6C008=1;break;end end end if ((4525>=2601) and (FlatIdent_6C008==1)) then FlatIdent_8E939=1;break;end end break;end end end if ((4879>=4068) and (FlatIdent_8E939==2)) then for Idx=A,Top do local FlatIdent_6A354=0;local FlatIdent_255C6;while true do if ((0==FlatIdent_6A354) or (3926<3489)) then FlatIdent_255C6=0;while true do if ((2493>325) and (FlatIdent_255C6==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end if ((FlatIdent_8E939==1) or (1789<=696)) then local FlatIdent_64D8E=0;while true do if ((FlatIdent_64D8E==0) or (2949>3375)) then local FlatIdent_7C02D=0;while true do if ((831<=4620) and (FlatIdent_7C02D==0)) then Top=(Limit + A) -1;Edx=0;FlatIdent_7C02D=1;end if ((FlatIdent_7C02D==1) or (4086==629)) then FlatIdent_64D8E=1;break;end end end if ((2023<=4285) and (FlatIdent_64D8E==1)) then FlatIdent_8E939=2;break;end end end end break;end if ((375<3475) and (FlatIdent_141FF==1)) then local FlatIdent_35493=0;while true do if ((1160>=867) and (FlatIdent_35493==0)) then Results=nil;Limit=nil;FlatIdent_35493=1;end if ((3640>852) and (1==FlatIdent_35493)) then FlatIdent_141FF=2;break;end end end end elseif ((4768>=4424) and (Enum==7)) then do return;end else local FlatIdent_7E704=0;local FlatIdent_57EC1;local A;local Results;local Limit;local Edx;while true do if ((1==FlatIdent_7E704) or (4441<4170)) then Results=nil;Limit=nil;FlatIdent_7E704=2;end if ((1852<=2276) and (FlatIdent_7E704==0)) then FlatIdent_57EC1=0;A=nil;FlatIdent_7E704=1;end if ((2487<=2662) and (FlatIdent_7E704==2)) then Edx=nil;while true do if ((FlatIdent_57EC1==2) or (1230==4088)) then for Idx=A,Top do local FlatIdent_7C1FF=0;while true do if ((4933==4933) and (FlatIdent_7C1FF==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end end break;end if ((FlatIdent_57EC1==1) or (357>4601)) then local FlatIdent_2947D=0;while true do if ((FlatIdent_2947D==1) or (1495>=4539)) then FlatIdent_57EC1=2;break;end if ((3722>=474) and (FlatIdent_2947D==0)) then Top=(Limit + A) -1;Edx=0;FlatIdent_2947D=1;end end end if ((2384>=28) and (FlatIdent_57EC1==0)) then A=Inst[2];Results,Limit=_R(Stk[A](Stk[A + 1]));FlatIdent_57EC1=1;end end break;end end end elseif ((Enum<=9) or (1423<=68)) then Stk[Inst[2]]={};elseif ((Enum==10) or (4132<=1921)) then local FlatIdent_33563=0;local FlatIdent_7E952;local FlatIdent_86269;local A;while true do if ((1120<4849) and (FlatIdent_33563==0)) then FlatIdent_7E952=0;FlatIdent_86269=nil;FlatIdent_33563=1;end if ((1==FlatIdent_33563) or (329>560)) then A=nil;while true do if ((1791>=1508) and (FlatIdent_7E952==1)) then while true do if ((FlatIdent_86269==0) or (4887==4546)) then A=Inst[2];do return Unpack(Stk,A,A + Inst[3]);end break;end end break;end if ((4899==4899) and (FlatIdent_7E952==0)) then FlatIdent_86269=0;A=nil;FlatIdent_7E952=1;end end break;end end else local FlatIdent_899C7=0;local A;while true do if ((FlatIdent_899C7==0) or (2852>3739)) then A=Inst[2];Stk[A]=Stk[A](Stk[A + 1]);break;end end end elseif ((671<3147) and (Enum<=17)) then if ((Enum<=14) or (1608<713)) then if ((Enum<=12) or (4770<=1985)) then local FlatIdent_4A2F=0;local FlatIdent_8DE4E;local A;while true do if ((FlatIdent_4A2F==0) or (3701==2205)) then FlatIdent_8DE4E=0;A=nil;FlatIdent_4A2F=1;end if ((3757==3757) and (FlatIdent_4A2F==1)) then while true do if ((FlatIdent_8DE4E==0) or (4785<=2615)) then A=Inst[2];Stk[A](Stk[A + 1]);break;end end break;end end elseif ((Enum==13) or (3600==2225)) then Stk[Inst[2]]=Stk[Inst[3]] + Stk[Inst[4]];else local FlatIdent_1E9DE=0;local FlatIdent_92CB1;local A;local Results;local Edx;while true do if ((3868>1265) and (1==FlatIdent_1E9DE)) then Results=nil;Edx=nil;FlatIdent_1E9DE=2;end if ((FlatIdent_1E9DE==2) or (2496>4993)) then while true do if ((3007>=394) and (FlatIdent_92CB1==0)) then A=Inst[2];Results={Stk[A](Stk[A + 1])};FlatIdent_92CB1=1;end if ((561<2865) and (FlatIdent_92CB1==1)) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_2F68F=0;local FlatIdent_3892F;while true do if ((FlatIdent_2F68F==0) or (2528<975)) then FlatIdent_3892F=0;while true do if ((776<3451) and (FlatIdent_3892F==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end end break;end if ((FlatIdent_1E9DE==0) or (3930<=260)) then FlatIdent_92CB1=0;A=nil;FlatIdent_1E9DE=1;end end end elseif ((311<3705) and (Enum<=15)) then local FlatIdent_67B74=0;local FlatIdent_3011;local A;while true do if ((FlatIdent_67B74==1) or (3383==2982)) then while true do if ((FlatIdent_3011==0) or (1134<=206)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1,Inst[3]));break;end end break;end if ((FlatIdent_67B74==0) or (1722<=587)) then local FlatIdent_13537=0;while true do if ((FlatIdent_13537==1) or (3605<2106)) then FlatIdent_67B74=1;break;end if ((FlatIdent_13537==0) or (2394>=2626)) then FlatIdent_3011=0;A=nil;FlatIdent_13537=1;end end end end elseif ((1457<3398) and (Enum>16)) then local FlatIdent_4FCA7=0;local FlatIdent_F868;local A;while true do if ((FlatIdent_4FCA7==0) or (4741<2536)) then FlatIdent_F868=0;A=nil;FlatIdent_4FCA7=1;end if ((513<=542) and (1==FlatIdent_4FCA7)) then while true do if ((FlatIdent_F868==0) or (3188>4711)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1,Top));break;end end break;end end else Stk[Inst[2]]=Inst[3];end elseif ((Enum<=20) or (2151>=2719)) then if ((Enum<=18) or (358<=330)) then local FlatIdent_571CC=0;local FlatIdent_1A186;local FlatIdent_2E0DB;local A;while true do if ((FlatIdent_571CC==0) or (993==2984)) then FlatIdent_1A186=0;FlatIdent_2E0DB=nil;FlatIdent_571CC=1;end if ((FlatIdent_571CC==1) or (4024<=242)) then A=nil;while true do if ((1231<=1762) and (FlatIdent_1A186==0)) then local FlatIdent_54592=0;while true do if ((FlatIdent_54592==1) or (3181>=3399)) then FlatIdent_1A186=1;break;end if ((2895>1900) and (FlatIdent_54592==0)) then FlatIdent_2E0DB=0;A=nil;FlatIdent_54592=1;end end end if ((557<4995) and (1==FlatIdent_1A186)) then while true do if ((FlatIdent_2E0DB==0) or (4217>4224)) then A=Inst[2];Stk[A]=Stk[A]();break;end end break;end end break;end end elseif ((Enum==19) or (1186==3435)) then if ( not Stk[Inst[2]] or (4191==1726)) then VIP=VIP + 1;else VIP=Inst[3];end else Stk[Inst[2]]=Stk[Inst[3]] + Inst[4];end elseif ((Enum<=22) or (2731==3094)) then if ((Enum==21) or (3684<=2071)) then Stk[Inst[2]]=Stk[Inst[3]]/Inst[4];else Upvalues[Inst[3]]=Stk[Inst[2]];end elseif ((2671<=3601) and (Enum==23)) then Stk[Inst[2]]=Stk[Inst[3]];else local FlatIdent_3224F=0;local FlatIdent_78572;local A;while true do if ((FlatIdent_3224F==1) or (1990<=1067)) then while true do if ((267<4542) and (0==FlatIdent_78572)) then A=Inst[2];do return Stk[A](Unpack(Stk,A + 1,Top));end break;end end break;end if ((FlatIdent_3224F==0) or (2593>=4737)) then FlatIdent_78572=0;A=nil;FlatIdent_3224F=1;end end end elseif ((Enum<=36) or (4072==1704)) then if ((Enum<=30) or (3593>3617)) then if ((Enum<=27) or (3913==3619)) then if ((Enum<=25) or (3099==2363)) then local FlatIdent_24CF2=0;local FlatIdent_3498;local FlatIdent_7CE94;local A;while true do if ((FlatIdent_24CF2==0) or (4664<=2411)) then FlatIdent_3498=0;FlatIdent_7CE94=nil;FlatIdent_24CF2=1;end if ((1==FlatIdent_24CF2) or (548>2184)) then A=nil;while true do if ((4313>=911) and (FlatIdent_3498==0)) then FlatIdent_7CE94=0;A=nil;FlatIdent_3498=1;end if ((FlatIdent_3498==1) or (4684<2154)) then while true do if ((2029>=369) and (FlatIdent_7CE94==0)) then A=Inst[2];Stk[A](Unpack(Stk,A + 1,Top));break;end end break;end end break;end end elseif ((Enum>26) or (46>1661)) then Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];else for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end end elseif ((493<=4282) and (Enum<=28)) then Stk[Inst[2]]=Env[Inst[3]];elseif ((Enum>29) or (2685<1512)) then local FlatIdent_6C125=0;local A;local C;local CB;local Result;local R;while true do if ((FlatIdent_6C125==1) or (402>=2498)) then CB=A + 2;Result={Stk[A](Stk[A + 1],Stk[CB])};FlatIdent_6C125=2;end if ((FlatIdent_6C125==3) or (1393>=4069)) then if ((1932<2440) and R) then local FlatIdent_8F9BA=0;local FlatIdent_54DA3;while true do if ((FlatIdent_8F9BA==0) or (4278<4065)) then FlatIdent_54DA3=0;while true do if ((3612==3612) and (FlatIdent_54DA3==0)) then Stk[CB]=R;VIP=Inst[3];break;end end break;end end else VIP=VIP + 1;end break;end if ((2==FlatIdent_6C125) or (2107>3731)) then local FlatIdent_1ACD=0;while true do if ((2424>1523) and (FlatIdent_1ACD==1)) then FlatIdent_6C125=3;break;end if ((20==20) and (FlatIdent_1ACD==0)) then for Idx=1,C do Stk[CB + Idx]=Result[Idx];end R=Result[1];FlatIdent_1ACD=1;end end end if ((FlatIdent_6C125==0) or (1118==2787)) then local FlatIdent_61D1D=0;while true do if ((2231>204) and (FlatIdent_61D1D==1)) then FlatIdent_6C125=1;break;end if ((81==81) and (FlatIdent_61D1D==0)) then A=Inst[2];C=Inst[4];FlatIdent_61D1D=1;end end end end else local FlatIdent_1EA95=0;local FlatIdent_50008;local NewProto;local NewUvals;local Indexes;while true do if ((2230==2230) and (FlatIdent_1EA95==1)) then local FlatIdent_360B9=0;while true do if ((1699<2702) and (FlatIdent_360B9==1)) then FlatIdent_1EA95=2;break;end if ((3567>241) and (FlatIdent_360B9==0)) then NewUvals=nil;Indexes=nil;FlatIdent_360B9=1;end end end if ((FlatIdent_1EA95==0) or (3032<=1369)) then local FlatIdent_1F628=0;while true do if ((743==743) and (FlatIdent_1F628==0)) then FlatIdent_50008=0;NewProto=nil;FlatIdent_1F628=1;end if ((4885>4155) and (FlatIdent_1F628==1)) then FlatIdent_1EA95=1;break;end end end if ((2250<4551) and (FlatIdent_1EA95==2)) then while true do if ((FlatIdent_50008==1) or (858>2400)) then local FlatIdent_8830D=0;while true do if ((2805<4739) and (FlatIdent_8830D==0)) then local FlatIdent_16F0F=0;while true do if ((0==FlatIdent_16F0F) or (2776<=1449)) then Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key)local FlatIdent_5C5FF=0;local FlatIdent_1C41E;local Val;while true do if ((2490<3495) and (FlatIdent_5C5FF==1)) then while true do if ((3927>=583) and (FlatIdent_1C41E==0)) then Val=Indexes[Key];return Val[1][Val[2]];end end break;end if ((FlatIdent_5C5FF==0) or (4720<742)) then FlatIdent_1C41E=0;Val=nil;FlatIdent_5C5FF=1;end end end,__newindex=function(_,Key,Value)local FlatIdent_46811=0;local Val;while true do if ((FlatIdent_46811==0) or (3364==3103)) then Val=Indexes[Key];Val[1][Val[2]]=Value;break;end end end});FlatIdent_16F0F=1;end if ((702<2481) and (FlatIdent_16F0F==1)) then FlatIdent_8830D=1;break;end end end if ((3422<3427) and (FlatIdent_8830D==1)) then FlatIdent_50008=2;break;end end end if ((FlatIdent_50008==0) or (3961==2216)) then local FlatIdent_3CC65=0;local FlatIdent_180D7;while true do if ((0==FlatIdent_3CC65) or (2766==2389)) then FlatIdent_180D7=0;while true do if ((4810>6) and (FlatIdent_180D7==0)) then local FlatIdent_37D95=0;while true do if ((FlatIdent_37D95==1) or (4839<3778)) then FlatIdent_180D7=1;break;end if ((0==FlatIdent_37D95) or (2495==4397)) then NewProto=Proto[Inst[3]];NewUvals=nil;FlatIdent_37D95=1;end end end if ((FlatIdent_180D7==1) or (3650<=737)) then FlatIdent_50008=1;break;end end break;end end end if ((4579>=766) and (FlatIdent_50008==2)) then for Idx=1,Inst[4] do local FlatIdent_776DA=0;local FlatIdent_8C274;local FlatIdent_19769;local Mvm;while true do if ((2765>2314) and (FlatIdent_776DA==0)) then FlatIdent_8C274=0;FlatIdent_19769=nil;FlatIdent_776DA=1;end if ((FlatIdent_776DA==1) or (2014<952)) then Mvm=nil;while true do if ((FlatIdent_8C274==0) or (2314<135)) then FlatIdent_19769=0;Mvm=nil;FlatIdent_8C274=1;end if ((3722<=3994) and (FlatIdent_8C274==1)) then while true do if ((FlatIdent_19769==0) or (2018==1323)) then local FlatIdent_6D6B8=0;local FlatIdent_34BB6;while true do if ((1677<3236) and (FlatIdent_6D6B8==0)) then FlatIdent_34BB6=0;while true do if ((3869>=354) and (1==FlatIdent_34BB6)) then FlatIdent_19769=1;break;end if ((3764>=3578) and (FlatIdent_34BB6==0)) then local FlatIdent_C41E=0;while true do if ((FlatIdent_C41E==1) or (609>=4022)) then FlatIdent_34BB6=1;break;end if ((FlatIdent_C41E==0) or (1304>4824)) then VIP=VIP + 1;Mvm=Instr[VIP];FlatIdent_C41E=1;end end end end break;end end end if ((FlatIdent_19769==1) or (282>=549)) then if ((1622<=3292) and (Mvm[1]==23)) then Indexes[Idx-1]={Stk,Mvm[3]};else Indexes[Idx-1]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + 1]=Indexes;break;end end break;end end break;end end end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);break;end end break;end end end elseif ((Enum<=33) or (2640>=4923)) then if ((4109>=911) and (Enum<=31)) then Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);elseif ((Enum==32) or (199>1781)) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else Stk[Inst[2]]=Stk[Inst[3]] -Stk[Inst[4]];end elseif ((Enum<=34) or (3438==2753)) then local FlatIdent_4CD6=0;local A;local Results;local Edx;while true do if ((FlatIdent_4CD6==1) or (2193>4847)) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_C2B1=0;local FlatIdent_92662;while true do if ((FlatIdent_C2B1==0) or (757<681)) then FlatIdent_92662=0;while true do if ((1276<=1754) and (FlatIdent_92662==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end if ((0==FlatIdent_4CD6) or (608>=1411)) then local FlatIdent_98738=0;while true do if ((1==FlatIdent_98738) or (2835>3231)) then FlatIdent_4CD6=1;break;end if ((698<3187) and (FlatIdent_98738==0)) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1,Top))};FlatIdent_98738=1;end end end end elseif ((2324==2324) and (Enum==35)) then do return Stk[Inst[2]];end elseif ((Inst[2]<Stk[Inst[4]]) or (1194<=399)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((4367>3674) and (Enum<=42)) then if ((1104==1104) and (Enum<=39)) then if ((17==17) and (Enum<=37)) then local FlatIdent_48BC=0;local FlatIdent_4C036;local FlatIdent_2A4EB;local A;while true do if ((FlatIdent_48BC==1) or (3935==2586)) then A=nil;while true do if ((FlatIdent_4C036==1) or (3912<=3108)) then while true do if ((3923>=3035) and (0==FlatIdent_2A4EB)) then A=Inst[2];Stk[A](Unpack(Stk,A + 1,Inst[3]));break;end end break;end if ((FlatIdent_4C036==0) or (4343<=2347)) then local FlatIdent_6FE76=0;while true do if ((2683>184) and (FlatIdent_6FE76==0)) then FlatIdent_2A4EB=0;A=nil;FlatIdent_6FE76=1;end if ((FlatIdent_6FE76==1) or (2535>4920)) then FlatIdent_4C036=1;break;end end end end break;end if ((FlatIdent_48BC==0) or (4171==596)) then FlatIdent_4C036=0;FlatIdent_2A4EB=nil;FlatIdent_48BC=1;end end elseif ((2331>=1561) and (Enum>38)) then if ((Stk[Inst[2]]==Stk[Inst[4]]) or (4507<=2007)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((2965<3398) and Stk[Inst[2]]) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((Enum<=40) or (4190<=3365)) then Stk[Inst[2]]=Inst[3]~=0;elseif ((1258>=1198) and (Enum>41)) then if ((Stk[Inst[2]]<Inst[4]) or (1726<1332)) then VIP=VIP + 1;else VIP=Inst[3];end else VIP=Inst[3];end elseif ((Enum<=45) or (3944==1264)) then if ((Enum<=43) or (697>=4197)) then if ((3501>=824) and (Inst[2]==Stk[Inst[4]])) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((Enum==44) or (3980<2011)) then local FlatIdent_89CF9=0;local FlatIdent_3907F;local FlatIdent_8EAC3;local A;while true do if ((FlatIdent_89CF9==0) or (3665>3769)) then FlatIdent_3907F=0;FlatIdent_8EAC3=nil;FlatIdent_89CF9=1;end if ((3941<4674) and (FlatIdent_89CF9==1)) then A=nil;while true do if ((2086==2086) and (FlatIdent_3907F==1)) then while true do if ((FlatIdent_8EAC3==1) or (4889<=2380)) then for Idx=A,Top do local FlatIdent_AB47=0;local FlatIdent_3F887;local VA;while true do if ((4479>=3335) and (FlatIdent_AB47==1)) then while true do if ((FlatIdent_3F887==0) or (4170>=4980)) then VA=Vararg[Idx-A];Stk[Idx]=VA;break;end end break;end if ((1622<2928) and (FlatIdent_AB47==0)) then local FlatIdent_2676A=0;while true do if ((3390>=1360) and (FlatIdent_2676A==1)) then FlatIdent_AB47=1;break;end if ((FlatIdent_2676A==0) or (4589<1592)) then FlatIdent_3F887=0;VA=nil;FlatIdent_2676A=1;end end end end end break;end if ((FlatIdent_8EAC3==0) or (2742>3186)) then local FlatIdent_20F9A=0;local FlatIdent_74E2D;while true do if ((573<=3587) and (FlatIdent_20F9A==0)) then FlatIdent_74E2D=0;while true do if ((1==FlatIdent_74E2D) or (2260>=4709)) then FlatIdent_8EAC3=1;break;end if ((FlatIdent_74E2D==0) or (216>=244)) then local FlatIdent_28555=0;while true do if ((4700>2995) and (FlatIdent_28555==0)) then A=Inst[2];Top=(A + Varargsz) -1;FlatIdent_28555=1;end if ((1688>=1144) and (FlatIdent_28555==1)) then FlatIdent_74E2D=1;break;end end end end break;end end end end break;end if ((3720<=4691) and (FlatIdent_3907F==0)) then local FlatIdent_7944F=0;while true do if ((435<4383) and (FlatIdent_7944F==0)) then FlatIdent_8EAC3=0;A=nil;FlatIdent_7944F=1;end if ((FlatIdent_7944F==1) or (3745==3712)) then FlatIdent_3907F=1;break;end end end end break;end end else Stk[Inst[2]]();end elseif ((4727>1537) and (Enum<=47)) then if ((Enum>46) or (374>3645)) then Stk[Inst[2]]=Upvalues[Inst[3]];else local FlatIdent_6C40=0;local FlatIdent_2176A;local FlatIdent_2A83D;local A;while true do if ((0==FlatIdent_6C40) or (1250>3609)) then FlatIdent_2176A=0;FlatIdent_2A83D=nil;FlatIdent_6C40=1;end if ((FlatIdent_6C40==1) or (2049<1277)) then A=nil;while true do if ((75<=1736) and (FlatIdent_2176A==0)) then local FlatIdent_7256A=0;while true do if ((FlatIdent_7256A==0) or (4414<3810)) then FlatIdent_2A83D=0;A=nil;FlatIdent_7256A=1;end if ((FlatIdent_7256A==1) or (4527<2371)) then FlatIdent_2176A=1;break;end end end if ((FlatIdent_2176A==1) or (3366==355)) then while true do if ((2389<=3127) and (FlatIdent_2A83D==0)) then A=Inst[2];do return Unpack(Stk,A,Top);end break;end end break;end end break;end end end elseif ((Enum>48) or (34==4142)) then local FlatIdent_2F369=0;local FlatIdent_5B46D;local A;local T;while true do if ((FlatIdent_2F369==0) or (4244<2686)) then FlatIdent_5B46D=0;A=nil;FlatIdent_2F369=1;end if ((FlatIdent_2F369==1) or (3408<664)) then T=nil;while true do if ((149<=506) and (FlatIdent_5B46D==0)) then local FlatIdent_1BA65=0;while true do if ((93<406) and (FlatIdent_1BA65==1)) then FlatIdent_5B46D=1;break;end if ((1831<3831) and (FlatIdent_1BA65==0)) then A=Inst[2];T=Stk[A];FlatIdent_1BA65=1;end end end if ((3589>862) and (FlatIdent_5B46D==1)) then for Idx=A + 1,Top do Insert(T,Stk[Idx]);end break;end end break;end end else Stk[Inst[2]][Inst[3]]=Inst[4];end VIP=VIP + 1;break;end if ((FlatIdent_2FA00==0) or (4905<=3793)) then local FlatIdent_8D918=0;while true do if ((FlatIdent_8D918==0) or (402>=2683)) then Inst=Instr[VIP];Enum=Inst[1];FlatIdent_8D918=1;end if ((2590>2422) and (1==FlatIdent_8D918)) then FlatIdent_2FA00=1;break;end end end end break;end end end end FlatIdent_51341=3;end end end;end return Wrap(Deserialize(),{},vmenv)();end if (FlatIdent_74A85==0) then DIP=1;repeatNext=nil;ByteString=Subg(Sub(ByteString,5),"..",function(byte)if (Byte(byte,2)==79) then repeatNext=StrToNumber(Sub(byte,1,1));return "";else local a=Char(StrToNumber(byte,16));if repeatNext then local FlatIdent_65A39=0;local b;while true do if (FlatIdent_65A39==1) then return b;end if (FlatIdent_65A39==0) then b=Rep(a,repeatNext);repeatNext=nil;FlatIdent_65A39=1;end end else return a;end end end);gBit=nil;FlatIdent_74A85=1;end if (FlatIdent_74A85==1) then function gBit(Bit,Start,End)if End then local Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1));return Res-(Res%1);else local Plc=2^(Start-1);return (((Bit%(Plc + Plc))>=Plc) and 1) or 0;end end gBits8=nil;function gBits8()local a=Byte(ByteString,DIP,DIP);DIP=DIP + 1;return a;end gBits16=nil;FlatIdent_74A85=2;end end end FlatIdent_3C647=4;end if (FlatIdent_3C647==1) then Subg=string.gsub;Rep=string.rep;Concat=table.concat;Insert=table.insert;FlatIdent_3C647=2;end if (FlatIdent_3C647==2) then GetFEnv=getfenv or function()return _ENV;end;Setmetatable=setmetatable;PCall=pcall;Select=select;FlatIdent_3C647=3;end if (FlatIdent_3C647==4) then VMCalletFEnv());break;end if (FlatIdent_3C647==0) then StrToNumber=tonumber;Byte=string.byte;Char=string.char;Sub=string.sub;FlatIdent_3C647=1;end end end
